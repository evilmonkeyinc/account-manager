syntax = "proto3";

package openapi;

import "google/api/annotations.proto";

import "google/protobuf/descriptor.proto";

message Error {
  string code = 1;

  string message = 2;
}

message Paging {
  string current = 1;

  string first = 2;

  string previous = 3;

  string next = 4;

  string last = 5;
}

message PageDetails {
  int64 limit = 1;

  int64 page = 2;

  int64 count = 3;

  int64 total = 4;

  Paging paging = 5;
}

message Plugin {
  string name = 1;
}

message ListPluginsResponse {
  int64 limit = 1;

  int64 page = 2;

  int64 count = 3;

  int64 total = 4;

  Paging paging = 5;

  repeated Plugin data = 6;
}

message User {
  string name = 1;

  string email = 2;
}

message ListUsersResponse {
  int64 limit = 1;

  int64 page = 2;

  int64 count = 3;

  int64 total = 4;

  Paging paging = 5;

  repeated User data = 6;
}

message QueryLimit {
  int64 limit = 1;
}

message QueryPage {
  int64 page = 1;
}

message Response404 {
  Error error = 1;
}

message Response500 {
  Error error = 1;
}

message ListPluginsRequest {
  QueryLimit query_limit = 1;

  QueryPage query_page = 2;
}

message FetchPluginRequest {
  string name = 1;
}

message ListUsersRequest {
  QueryLimit query_limit = 1;

  QueryPage query_page = 2;
}

message CreateUserRequest {
  User user = 1;
}

service Openapi {
  rpc ListPlugins ( ListPluginsRequest ) returns ( ListPluginsResponse ) {
    option (google.api.http) = { get:"/plugins"  };
  }

  rpc FetchPlugin ( FetchPluginRequest ) returns ( Plugin ) {
    option (google.api.http) = { get:"/plugins/{name}"  };
  }

  rpc ListUsers ( ListUsersRequest ) returns ( ListUsersResponse ) {
    option (google.api.http) = { get:"/users"  };
  }

  rpc CreateUser ( CreateUserRequest ) returns ( User ) {
    option (google.api.http) = { post:"/users" body:"user"  };
  }
}

