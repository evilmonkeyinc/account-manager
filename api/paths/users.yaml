components:
  parameters:
    queryLimit:
      $ref: "../components/parameters/query-limit.yaml"
    queryPage:
      $ref: "../components/parameters/query-page.yaml"
  schemas:
    ListUsersResponse:
      $ref: "../components/schemas/users-list.yaml"
    PageDetails:
      $ref: "../components/schemas/page-details.yaml"
    User:
      $ref: "../components/schemas/user.yaml"
  responses:
    "UnauthorizedError":
      $ref: "../components/responses/UnauthorizedError.yaml"
    "NotFoundError":
      $ref: "../components/responses/NotFoundError.yaml"
    "InternalServerError":
      $ref: "../components/responses/InternalServerError.yaml"
  securitySchemas:
    BasicAuth:
      $ref: "../components/securitySchemes/basic.yaml"
    BearerAuth:
      $ref: "../components/securitySchemes/bearer.yaml"
paths:
  users:
    get:
      operationId: "listUsers"
      security:
        - BearerAuth: []
      tags:
        - users
      description: "list all users"
      parameters:
        - $ref: "#/components/parameters/queryLimit"
        - $ref: "#/components/parameters/queryPage"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      operationId: "createUser"
      security:
        - BearerAuth: []
      tags:
        - users
      description: "create a new user"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  users/token:
    post:
      operationId: "createToken"
      security:
        - BasicAuth: []
      tags:
        - users
      description: ""
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"
